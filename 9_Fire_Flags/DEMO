#!/bin/bash

# Fire CLIs  all come with  a number of flags.  These flags should  be separated
# from the Fire command  by an isolated `--`. If there is  at least one isolated
# `--` argument,  then arguments after  the final  isolated `--` are  treated as
# flags, whereas  all arguments  before the final  isolated `--`  are considered
# part of the Fire command.

# One useful flag  is the `--interactive` flag. Use the  `--interactive` flag on
# any CLI to enter a Python REPL with  all the modules and variables used in the
# context where `Fire` was called already available to you for use. Other useful
# variables, such as the result of the  Fire command will also be available. Use
# this feature like this: `python example.py -- --interactive`.

# You can add  the help flag to  any command to see help  and usage information.
# Fire incorporates your docstrings into the  help and usage information that it
# generates. Fire will  try to provide help  even if you omit  the isolated `--`
# separating  the flags  from  the Fire  command,  but may  not  always be  able
# to,  since `help`  is  a valid  argument  name. Use  this  feature like  this:
# `python example.py --  --help` or `python example.py --help`  (or even `python
# example.py -h`).

# The complete set of flags available is shown below, in the reference section.

python example.py -- --help                          # Show help and usage information for the command.
python example.py -- --interactive                   # Enter interactive mode.
python example.py foo a b c X upper -- --separator=X # This sets the separator to `X`. The default separator is `-`.
python example.py -- --completion bash               # Generate a completion script for the CLI.
python example.py foo a b c -- --trace               # Gets a Fire trace for the command.
